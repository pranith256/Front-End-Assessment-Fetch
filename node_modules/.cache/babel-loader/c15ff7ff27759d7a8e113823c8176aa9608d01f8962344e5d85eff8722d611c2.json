{"ast":null,"code":"const BASE_URL = process.env.BASE_URL || \"https://frontend-take-home-service.fetch.com\";\nexport const getBreeds = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs/breeds`, {\n      credentials: \"include\"\n    });\n    if (!response.ok) throw new Error(\"Failed to fetch breeds\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching breeds:\", error);\n    return [];\n  }\n};\nexport const searchDogs = async (breed = \"\", size = 25, from = 0, sort = \"\") => {\n  try {\n    let url = `${BASE_URL}/dogs/search?size=${size}&from=${from}`;\n    if (breed) url += `&breeds=${breed}`;\n    if (sort) url += `&sort=${sort}`;\n    const response = await fetch(url, {\n      credentials: \"include\"\n    });\n    if (!response.ok) throw new Error(\"Failed to search dogs\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error searching for dogs:\", error);\n    return {\n      resultIds: [],\n      total: 0,\n      next: null,\n      prev: null\n    };\n  }\n};\nexport const getDogsByIds = async dogIds => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dogIds)\n    });\n    if (!response.ok) throw new Error(\"Failed to fetch dog details\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching dogs by IDs:\", error);\n    return [];\n  }\n};\nexport const getMatch = async dogIds => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs/match`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dogIds)\n    });\n    if (!response.ok) throw new Error(\"Failed to fetch match\");\n    const data = await response.json();\n    return data.match;\n  } catch (error) {\n    console.error(\"Error fetching match:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["BASE_URL","process","env","getBreeds","response","fetch","credentials","ok","Error","json","error","console","searchDogs","breed","size","from","sort","url","resultIds","total","next","prev","getDogsByIds","dogIds","method","headers","body","JSON","stringify","getMatch","data","match"],"sources":["/Users/pranithreddysankepally/Downloads/FE-takehome/dog-shop-exercise/src/api/dogs.ts"],"sourcesContent":["const BASE_URL = process.env.BASE_URL || \"https://frontend-take-home-service.fetch.com\";\n\n\nexport const getBreeds = async (): Promise<string[]> => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs/breeds`, { credentials: \"include\" });\n    if (!response.ok) throw new Error(\"Failed to fetch breeds\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching breeds:\", error);\n    return [];\n  }\n};\n\nexport const searchDogs = async (breed: string = \"\", size: number = 25, from: number = 0, sort: string = \"\") => {\n    try {\n      let url = `${BASE_URL}/dogs/search?size=${size}&from=${from}`;\n      if (breed) url += `&breeds=${breed}`;\n      if (sort) url += `&sort=${sort}`;\n  \n      const response = await fetch(url, { credentials: \"include\" });\n      if (!response.ok) throw new Error(\"Failed to search dogs\");\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error searching for dogs:\", error);\n      return { resultIds: [], total: 0, next: null, prev: null };\n    }\n  };\n\n\nexport const getDogsByIds = async (dogIds: string[]) => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(dogIds),\n    });\n\n    if (!response.ok) throw new Error(\"Failed to fetch dog details\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching dogs by IDs:\", error);\n    return [];\n  }\n};\n\n\nexport const getMatch = async (dogIds: string[]) => {\n  try {\n    const response = await fetch(`${BASE_URL}/dogs/match`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(dogIds),\n    });\n\n    if (!response.ok) throw new Error(\"Failed to fetch match\");\n    const data = await response.json();\n    return data.match;\n  } catch (error) {\n    console.error(\"Error fetching match:\", error);\n    return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}